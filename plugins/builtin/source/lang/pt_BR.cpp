#include <hex/api/content_registry.hpp>
#include <hex/api/localization.hpp>

namespace hex::plugin::builtin {

    void registerLanguagePtBR() {
        ContentRegistry::Language::registerLanguage("Portuguese (Brazilian)", "pt-BR");

        ContentRegistry::Language::addLocalizations("pt-BR", {
                { "hex.builtin.welcome.header.main", "Bem-vindo ao ImHex" },
                { "hex.builtin.welcome.header.start", "Iniciar" },
                    { "hex.builtin.welcome.start.create_file", "Criar Novo Arquivo" },
                    { "hex.builtin.welcome.start.open_file", "Abrir Arquivo" },
                    { "hex.builtin.welcome.start.open_project", "Abrir Projeto" },
                    { "hex.builtin.welcome.start.recent", "Arquivos Recentes" },
                    { "hex.builtin.welcome.start.open_other", "Outros Provedores" },
                { "hex.builtin.welcome.header.help", "Ajuda" },
                    { "hex.builtin.welcome.help.repo", "Repositório do GitHub" },
                        { "hex.builtin.welcome.help.repo.link", "https://imhex.werwolv.net/git" },
                    { "hex.builtin.welcome.help.gethelp", "Obter Ajuda" },
                        { "hex.builtin.welcome.help.gethelp.link", "https://github.com/WerWolv/ImHex/discussions/categories/get-help" },
                    { "hex.builtin.welcome.help.discord", "Servidor do Discord" },
                        { "hex.builtin.welcome.help.discord.link", "https://imhex.werwolv.net/discord" },
                { "hex.builtin.welcome.header.plugins", "Plugins Carregados" },
                    { "hex.builtin.welcome.plugins.plugin", "Plugin" },
                    { "hex.builtin.welcome.plugins.author", "Autor" },
                    { "hex.builtin.welcome.plugins.desc", "Descrição" },
                { "hex.builtin.welcome.header.customize", "Customizar" },
                    { "hex.builtin.welcome.customize.settings.title", "Configurações" },
                    { "hex.builtin.welcome.customize.settings.desc", "Mudar preferencias do ImHex" },
                { "hex.builtin.welcome.header.update", "Atualizações" },
                    { "hex.builtin.welcome.update.title", "Nova atualização disponivel!" },
                    { "hex.builtin.welcome.update.desc", "ImHex {0} acabou de lançar! Baixe aqui." },
                    { "hex.builtin.welcome.update.link", "https://github.com/WerWolv/ImHex/releases/latest" },
                { "hex.builtin.welcome.header.learn", "Aprender" },
                    { "hex.builtin.welcome.learn.latest.title", "Último lançamento" },
                    { "hex.builtin.welcome.learn.latest.desc", "Leia o changelog atual do ImHex" },
                    { "hex.builtin.welcome.learn.latest.link", "https://github.com/WerWolv/ImHex/releases/latest" },
                    { "hex.builtin.welcome.learn.pattern.title", "Documentação da linguagem padrão" },
                    { "hex.builtin.welcome.learn.pattern.desc", "Aprenda a escrever padrões ImHex com nossa extensa documentação" },
                    { "hex.builtin.welcome.learn.pattern.link", "https://imhex.werwolv.net/docs" },
                    { "hex.builtin.welcome.learn.plugins.title", "Plugins API" },
                    { "hex.builtin.welcome.learn.plugins.desc", "Estenda o ImHex com recursos adicionais usando plugins" },
                    { "hex.builtin.welcome.learn.plugins.link", "https://github.com/WerWolv/ImHex/wiki/Plugins-Development-Guide" },
                { "hex.builtin.welcome.header.various", "Vários" },
                { "hex.builtin.welcome.tip_of_the_day", "Dica do Dia" },

                { "hex.builtin.welcome.safety_backup.title", "Restaurar dados perdidos" },
                { "hex.builtin.welcome.safety_backup.desc", "Ah não, ImHex crashou na ultima vez.\nDeseja restaurar seu trabalho anterior?"},
                { "hex.builtin.welcome.safety_backup.restore", "Yes, Restaurar" },
                { "hex.builtin.welcome.safety_backup.delete", "Não, Apagar" },

                { "hex.builtin.common.endian", "Endian" },
                { "hex.builtin.common.little_endian", "Little Endian" },
                { "hex.builtin.common.big_endian", "Big Endian" },
                { "hex.builtin.common.little", "Little" },
                { "hex.builtin.common.big", "Big" },
                { "hex.builtin.common.number_format", "Format" },
                { "hex.builtin.common.decimal", "Decimal" },
                { "hex.builtin.common.hexadecimal", "Hexadecimal" },
                { "hex.builtin.common.octal", "Octal" },
                { "hex.builtin.common.info", "Informação" },
                { "hex.builtin.common.error", "Erro" },
                { "hex.builtin.common.fatal", "Erro Fatal" },
                { "hex.builtin.common.question", "Question" },
                { "hex.builtin.common.address", "Address" },
                { "hex.builtin.common.size", "Tamanho" },
                { "hex.builtin.common.region", "Region" },
                { "hex.builtin.common.match_selection", "Seleção de correspondência" },
                { "hex.builtin.common.yes", "Sim" },
                { "hex.builtin.common.no", "Não" },
                { "hex.builtin.common.okay", "OK" },
                { "hex.builtin.common.load", "Carregar" },
                { "hex.builtin.common.cancel", "Cancelar" },
                { "hex.builtin.common.set", "Colocar" },
                { "hex.builtin.common.close", "Fechar" },
                { "hex.builtin.common.dont_show_again", "Não Mostrar Novamente" },
                { "hex.builtin.common.link", "Link" },
                { "hex.builtin.common.file", "Arquivo" },
                { "hex.builtin.common.open", "Abrir" },
                { "hex.builtin.common.browse", "Navegar..." },
                { "hex.builtin.common.choose_file", "Escolher arquivo" },
                { "hex.builtin.common.processing", "Processando" },
                //{ "hex.builtin.common.filter", "Filter" },
                //{ "hex.builtin.common.count", "Count" },
                //{ "hex.builtin.common.value", "Value" },
                //{ "hex.builtin.common.type", "Type" },
                    { "hex.builtin.common.type.u8", "uint8_t" },
                    { "hex.builtin.common.type.i8", "int8_t" },
                    { "hex.builtin.common.type.u16", "uint16_t" },
                    { "hex.builtin.common.type.i16", "int16_t" },
                    { "hex.builtin.common.type.u24", "uint24_t" },
                    { "hex.builtin.common.type.i24", "int24_t" },
                    { "hex.builtin.common.type.u32", "uint32_t" },
                    { "hex.builtin.common.type.i32", "int32_t" },
                    { "hex.builtin.common.type.u48", "uint48_t" },
                    { "hex.builtin.common.type.i48", "int48_t" },
                    { "hex.builtin.common.type.u64", "uint64_t" },
                    { "hex.builtin.common.type.i64", "int64_t" },
                    { "hex.builtin.common.type.f32", "float" },
                    { "hex.builtin.common.type.f64", "double" },
                { "hex.builtin.common.offset", "Offset" },
                //{ "hex.builtin.common.range", "Range" },
                    //{ "hex.builtin.common.range.entire_data", "Entire Data" },
                    //{ "hex.builtin.common.range.selection", "Selection" },
                //{ "hex.builtin.common.comment", "Comment" },

                { "hex.builtin.common.encoding.ascii", "ASCII" },
                { "hex.builtin.common.encoding.utf16le", "UTF-16LE" },
                { "hex.builtin.common.encoding.utf16be", "UTF-16BE" },
                { "hex.builtin.common.encoding.utf8", "UTF-8" },

                { "hex.builtin.popup.exit_application.title", "Sair da aplicação?" },
                { "hex.builtin.popup.exit_application.desc", "Você tem alterações não salvas feitas em seu projeto.\nVocê tem certeza que quer sair?" },
                //{ "hex.builtin.popup.close_provider.title", "Close Provider?" },
                //{ "hex.builtin.popup.close_provider.desc", "You have unsaved changes made to this Provider.\nAre you sure you want to close it?" },
                { "hex.builtin.popup.error.read_only", "Não foi possível obter acesso de gravação. Arquivo aberto no modo somente leitura." },
                { "hex.builtin.popup.error.open", "Falha ao abrir o arquivo!" },
                { "hex.builtin.popup.error.create", "Falha ao criar um novo arquivo!" },
                //{ "hex.builtin.popup.error.project.load", "Failed to load project!" },
                //{ "hex.builtin.popup.error.project.save", "Failed to save project!" },
                //{ "hex.builtin.popup.error.task_exception", "Exception thrown in Task '{}':\n\n{}" },
                //{ "hex.builtin.popup.error.file_dialog.portal",
                //    "There was an error while opening the file browser. This might be caused by your system not having a xdg-desktop-portal backend installed correctly.\n"
                //    "\n"
                //    "On KDE, it's xdg-desktop-portal-kde.\n"
                //    "On Gnome it's xdg-desktop-portal-gnome.\n"
                //    "On wlroots it's xdg-desktop-portal-wlr.\n"
                //    "Otherwise, you can try to use xdg-desktop-portal-gtk.\n"
                //    "\n"
                //    "Reboot your system after installing it.\n"
                //    "\n"
                //    "If the file browser still doesn't work after this, submit an issue at https://github.com/WerWolv/ImHex/issues\n"
                //    "\n"
                //    "In the meantime files can still be opened by dragging them onto the ImHex window!"
                //},
                //{ "hex.builtin.popup.error.file_dialog.common", "An error occurred while opening the file browser!" },

                { "hex.builtin.menu.file", "File" },
                    //{ "hex.builtin.menu.file.create_file", "New File..." },
                    { "hex.builtin.menu.file.open_file", "Abrir Arquivo..." },
                    { "hex.builtin.menu.file.open_recent", "Abrir Recentes" },
                    { "hex.builtin.menu.file.clear_recent", "Limpar" },
                    { "hex.builtin.menu.file.open_other", "Abrir outro..." },
                    { "hex.builtin.menu.file.close", "Fechar" },
                    //{ "hex.builtin.menu.file.reload_file", "Reload File" },
                    { "hex.builtin.menu.file.quit", "Sair do ImHex" },
                    { "hex.builtin.menu.file.open_project", "Abrir Projeto..." },
                    { "hex.builtin.menu.file.save_project", "Salvar Projeto..." },
                    { "hex.builtin.menu.file.import", "Importar..." },
                        { "hex.builtin.menu.file.import.base64", "Arquivo Base64" },
                          { "hex.builtin.menu.file.import.base64.popup.import_error", "Esse arquivo não é baseado em um formato Base64 valido!" },
                          { "hex.builtin.menu.file.import.base64.popup.open_error", "Falha ao abrir o arquivo!" },
                        { "hex.builtin.menu.file.import.ips", "IPS Patch" },
                        { "hex.builtin.menu.file.import.ips32", "IPS32 Patch" },
                    { "hex.builtin.menu.file.export", "Exportar..." },
                        { "hex.builtin.menu.file.export.title", "Exportar Arquivo" },
                        { "hex.builtin.menu.file.export.ips", "IPS Patch" },
                        { "hex.builtin.menu.file.export.ips32", "IPS32 Patch" },
                        { "hex.builtin.menu.file.export.base64.popup.export_error", "Esse arquivo não é baseado em um formato Base64 valido!" },
                    { "hex.builtin.menu.file.export.popup.create", "Não é possível exportar os dados. Falha ao criar arquivo!" },
                    //{ "hex.builtin.menu.file.bookmark.import", "Import bookmarks" },
                    //{ "hex.builtin.menu.file.bookmark.export", "Export bookmarks" },

                { "hex.builtin.menu.edit", "Editar" },
                    { "hex.builtin.menu.edit.undo", "Desfazer" },
                    { "hex.builtin.menu.edit.redo", "Refazer" },
                    { "hex.builtin.menu.edit.bookmark.create", "Criar Marcador" },

                { "hex.builtin.menu.view", "Exibir" },
                { "hex.builtin.menu.layout", "Layout" },
                    { "hex.builtin.menu.view.fps", "Mostrar FPS" },
                    { "hex.builtin.menu.view.demo", "Mostrar Demo do ImGui" },
                { "hex.builtin.menu.help", "Ajuda" },

                { "hex.builtin.view.bookmarks.name", "Favoritos" },
                    { "hex.builtin.view.bookmarks.default_title", "Favorito [0x{0:X} - 0x{1:X}]" },
                    { "hex.builtin.view.bookmarks.no_bookmarks", "Nenhum favorito criado. Adicione-o e Edite -> Criar Favorito" },
                    { "hex.builtin.view.bookmarks.title.info", "Informação" },
                    { "hex.builtin.view.bookmarks.address", "0x{0:X} : 0x{1:X} ({2} bytes)" },
                    { "hex.builtin.view.bookmarks.button.jump", "Pular para" },
                    { "hex.builtin.view.bookmarks.button.remove", "Remover" },
                    { "hex.builtin.view.bookmarks.header.name", "Nome" },
                    { "hex.builtin.view.bookmarks.header.color", "Cor" },
                    { "hex.builtin.view.bookmarks.header.comment", "Comentar" },

                { "hex.builtin.view.command_palette.name", "Paleta de Comandos" },

                { "hex.builtin.view.data_inspector.name", "Inspecionador de Dados" },
                    { "hex.builtin.view.data_inspector.table.name", "Nome" },
                    { "hex.builtin.view.data_inspector.table.value", "Valor" },
                    { "hex.builtin.view.data_inspector.no_data", "Nenhum Byte Selecionado" },
                    { "hex.builtin.view.data_inspector.invert", "Inverter" },

                { "hex.builtin.view.data_processor.name", "Data Processor" },
                    { "hex.builtin.view.data_processor.help_text", "Botão direito para adicionar um novo Node" },
                    { "hex.builtin.view.data_processor.menu.remove_selection", "Remover Selecionado" },
                    { "hex.builtin.view.data_processor.menu.remove_node", "Remover Node" },
                    { "hex.builtin.view.data_processor.menu.remove_link", "Remover Link" },
                    { "hex.builtin.view.data_processor.menu.file.load_processor", "Load data processor..." },
                    { "hex.builtin.view.data_processor.menu.file.save_processor", "Save data processor..." },

                { "hex.builtin.view.disassembler.name", "Desmontador" },
                    { "hex.builtin.view.disassembler.position", "Posição" },
                    { "hex.builtin.view.disassembler.base", "Endereço base" },
                    { "hex.builtin.view.disassembler.region", "Região do código" },
                    { "hex.builtin.view.disassembler.settings.header", "Configurações" },
                    { "hex.builtin.view.disassembler.settings.mode", "Modo" },
                    { "hex.builtin.view.disassembler.arch", "Arquitetura" },
                        { "hex.builtin.view.disassembler.16bit", "16-bit" },
                        { "hex.builtin.view.disassembler.32bit", "32-bit" },
                        { "hex.builtin.view.disassembler.64bit", "64-bit" },

                        { "hex.builtin.view.disassembler.arm.arm", "ARM" },
                        { "hex.builtin.view.disassembler.arm.thumb", "Thumb" },
                        { "hex.builtin.view.disassembler.arm.default", "Default" },
                        { "hex.builtin.view.disassembler.arm.cortex_m", "Cortex-M" },
                        { "hex.builtin.view.disassembler.arm.armv8", "ARMv8" },

                        { "hex.builtin.view.disassembler.mips.mips32", "MIPS32" },
                        { "hex.builtin.view.disassembler.mips.mips64", "MIPS64" },
                        { "hex.builtin.view.disassembler.mips.mips32R6", "MIPS32R6" },
                        { "hex.builtin.view.disassembler.mips.mips2", "MIPS II" },
                        { "hex.builtin.view.disassembler.mips.mips3", "MIPS III" },
                        { "hex.builtin.view.disassembler.mips.micro", "Micro" },

                        { "hex.builtin.view.disassembler.ppc.qpx", "Quad Processing Extensions" },
                        { "hex.builtin.view.disassembler.ppc.spe", "Signal Processing Engine" },
                        { "hex.builtin.view.disassembler.ppc.booke", "Book-E" },

                        { "hex.builtin.view.disassembler.sparc.v9", "Sparc V9" },

                        { "hex.builtin.view.disassembler.riscv.compressed", "Compressed" },

                        { "hex.builtin.view.disassembler.m68k.000", "000" },
                        { "hex.builtin.view.disassembler.m68k.010", "010" },
                        { "hex.builtin.view.disassembler.m68k.020", "020" },
                        { "hex.builtin.view.disassembler.m68k.030", "030" },
                        { "hex.builtin.view.disassembler.m68k.040", "040" },
                        { "hex.builtin.view.disassembler.m68k.060", "060" },

                        { "hex.builtin.view.disassembler.m680x.6301", "6301" },
                        { "hex.builtin.view.disassembler.m680x.6309", "6309" },
                        { "hex.builtin.view.disassembler.m680x.6800", "6800" },
                        { "hex.builtin.view.disassembler.m680x.6801", "6801" },
                        { "hex.builtin.view.disassembler.m680x.6805", "6805" },
                        { "hex.builtin.view.disassembler.m680x.6808", "6808" },
                        { "hex.builtin.view.disassembler.m680x.6809", "6809" },
                        { "hex.builtin.view.disassembler.m680x.6811", "6811" },
                        { "hex.builtin.view.disassembler.m680x.cpu12", "CPU12" },
                        { "hex.builtin.view.disassembler.m680x.hcs08", "HCS08" },

                        { "hex.builtin.view.disassembler.mos65xx.6502", "6502" },
                        { "hex.builtin.view.disassembler.mos65xx.65c02", "65C02" },
                        { "hex.builtin.view.disassembler.mos65xx.w65c02", "W65C02" },
                        { "hex.builtin.view.disassembler.mos65xx.65816", "65816" },
                        { "hex.builtin.view.disassembler.mos65xx.65816_long_m", "65816 Long M" },
                        { "hex.builtin.view.disassembler.mos65xx.65816_long_x", "65816 Long X" },
                        { "hex.builtin.view.disassembler.mos65xx.65816_long_mx", "65816 Long MX" },

                        { "hex.builtin.view.disassembler.bpf.classic", "Classico" },
                        { "hex.builtin.view.disassembler.bpf.extended", "Extendido" },

                    { "hex.builtin.view.disassembler.disassemble", "Desmontar" },
                    { "hex.builtin.view.disassembler.disassembling", "Desmontando..." },
                    { "hex.builtin.view.disassembler.disassembly.title", "Disassembly" },
                        { "hex.builtin.view.disassembler.disassembly.address", "Address" },
                        { "hex.builtin.view.disassembler.disassembly.offset", "Offset" },
                        { "hex.builtin.view.disassembler.disassembly.bytes", "Byte" },

                { "hex.builtin.view.hashes.name", "Hashes" },
                    { "hex.builtin.view.hashes.hash", "Hash" },
                    { "hex.builtin.view.hashes.no_settings", "Nenhuma configuração disponivel" },
                    { "hex.builtin.view.hashes.function", "Função Hash" },
                    { "hex.builtin.view.hashes.table.name", "Nome" },
                    { "hex.builtin.view.hashes.table.type", "Tipo" },
                    { "hex.builtin.view.hashes.table.result", "Resultado" },
                    { "hex.builtin.view.hashes.remove", "Remover hash" },
                    { "hex.builtin.view.hashes.hover_info", "Passe o mouse sobre a seleção Hex Editor e mantenha pressionada a tecla SHIFT para visualizar os hashes dessa região." },

                { "hex.builtin.view.help.name", "Ajuda" },
                    { "hex.builtin.view.help.about.name", "Sobre" },
                        { "hex.builtin.view.help.about.translator", "Traduzido por Douglas Vianna" },
                        { "hex.builtin.view.help.about.source", "Código Fonte disponível no GitHub:" },
                        { "hex.builtin.view.help.about.donations", "Doações" },
                        { "hex.builtin.view.help.about.thanks", "Se você gosta do meu trabalho, considere doar para manter o projeto em andamento. Muito obrigado <3" },
                        { "hex.builtin.view.help.about.contributor", "Contribuidores" },
                        { "hex.builtin.view.help.about.libs", "Bibliotecas usadas" },
                        { "hex.builtin.view.help.about.paths", "Diretórios do ImHex" },
                        { "hex.builtin.view.help.about.license", "Licença" },
                    { "hex.builtin.view.help.documentation", "Documentação do ImHex" },
                    { "hex.builtin.view.help.pattern_cheat_sheet", "Pattern Language Cheat Sheet"},
                    { "hex.builtin.view.help.calc_cheat_sheet", "Calculator Cheat Sheet" },

                { "hex.builtin.view.hex_editor.name", "Editor Hex" },
                    { "hex.builtin.view.hex_editor.page", "Pagina" },
                    { "hex.builtin.view.hex_editor.selection", "Seleção" },
                        { "hex.builtin.view.hex_editor.selection.none", "Nenhum" },
                    { "hex.builtin.view.hex_editor.region", "Região" },
                    { "hex.builtin.view.hex_editor.data_size", "Tamanho dos Dados" },
                    { "hex.builtin.view.hex_editor.no_bytes", "Nenhum Byte Disponivel" },

                    { "hex.builtin.view.hex_editor.menu.file.load_encoding_file", "Carregar codificação personalizada..." },
                    { "hex.builtin.view.hex_editor.menu.file.search", "Procurar" },
                        { "hex.builtin.view.hex_editor.search.string", "String" },
                        { "hex.builtin.view.hex_editor.search.hex", "Hex" },
                        { "hex.builtin.view.hex_editor.search.find", "Buscar" },
                    { "hex.builtin.view.hex_editor.menu.file.goto", "Ir para" },
                        { "hex.builtin.view.hex_editor.goto.offset.absolute", "Absoluto" },
                        { "hex.builtin.view.hex_editor.goto.offset.relative", "Relativo" },
                        { "hex.builtin.view.hex_editor.goto.offset.begin", "Começo" },
                        { "hex.builtin.view.hex_editor.goto.offset.end", "Fim" },
                    //{ "hex.builtin.view.hex_editor.menu.file.select", "Select" },
                    //    { "hex.builtin.view.hex_editor.select.offset.region", "Region" },
                    //        { "hex.builtin.view.hex_editor.select.offset.begin", "Begin" },
                    //        { "hex.builtin.view.hex_editor.select.offset.end", "End" },
                    //          { "hex.builtin.view.hex_editor.select.offset.size", "Size" },
                    //    { "hex.builtin.view.hex_editor.select.select", "Select" },
                    { "hex.builtin.view.hex_editor.menu.file.save", "Salvar" },
                    { "hex.builtin.view.hex_editor.menu.file.save_as", "Salvar como..." },
                    { "hex.builtin.view.hex_editor.menu.edit.copy", "Copiar" },
                    { "hex.builtin.view.hex_editor.menu.edit.copy_as", "Copiar como..." },
                        { "hex.builtin.view.hex_editor.copy.hex", "String" },
                        //{ "hex.builtin.view.hex_editor.copy.address", "Address" },
                        { "hex.builtin.view.hex_editor.copy.c", "C Array" },
                        { "hex.builtin.view.hex_editor.copy.cpp", "C++ Array" },
                        { "hex.builtin.view.hex_editor.copy.csharp", "C# Array" },
                        { "hex.builtin.view.hex_editor.copy.rust", "Rust Array" },
                        { "hex.builtin.view.hex_editor.copy.python", "Python Array" },
                        { "hex.builtin.view.hex_editor.copy.java", "Java Array" },
                        { "hex.builtin.view.hex_editor.copy.js", "JavaScript Array" },
                        { "hex.builtin.view.hex_editor.copy.lua", "Lua Array" },
                        { "hex.builtin.view.hex_editor.copy.go", "Go Array" },
                        { "hex.builtin.view.hex_editor.copy.crystal", "Crystal Array" },
                        { "hex.builtin.view.hex_editor.copy.swift", "Swift Array" },
                        { "hex.builtin.view.hex_editor.copy.pascal", "Pascal Array" },
                        { "hex.builtin.view.hex_editor.copy.base64", "Base64" },
                        //{ "hex.builtin.view.hex_editor.copy.ascii", "Text Area" },
                        { "hex.builtin.view.hex_editor.copy.html", "HTML" },
                    { "hex.builtin.view.hex_editor.menu.edit.paste", "Colar" },
                    //{ "hex.builtin.view.hex_editor.menu.edit.paste_all", "Paste all" },
                    { "hex.builtin.view.hex_editor.menu.edit.select_all", "Selecionar tudo" },
                    { "hex.builtin.view.hex_editor.menu.edit.set_base", "Definir endereço base" },
                    { "hex.builtin.view.hex_editor.menu.edit.resize", "Redimensionar..." },
                    { "hex.builtin.view.hex_editor.menu.edit.insert", "Inserir..." },
                    //{ "hex.builtin.view.hex_editor.menu.edit.remove", "Remove..." },
                    //{ "hex.builtin.view.hex_editor.menu.edit.jump_to", "Jump to" },

                { "hex.builtin.view.information.name", "Data Information" },
                    { "hex.builtin.view.information.control", "Controle" },
                    { "hex.builtin.view.information.analyze", "Analisar Pagina" },
                    { "hex.builtin.view.information.analyzing", "Analizando..." },
                    { "hex.builtin.view.information.region", "Região analizada" },
                    { "hex.builtin.view.information.magic", "Informação Mágica" },
                    { "hex.builtin.view.information.description", "Descrição:" },
                    { "hex.builtin.view.information.mime", "MIME Type:" },
                    { "hex.builtin.view.information.info_analysis", "Análise de Informações" },
                    { "hex.builtin.view.information.distribution", "Byte distribution" },
                    { "hex.builtin.view.information.entropy", "Entropy" },
                    { "hex.builtin.view.information.block_size", "Block size" },
                    { "hex.builtin.view.information.block_size.desc", "{0} blocks of {1} bytes" },
                    { "hex.builtin.view.information.file_entropy", "File entropy" },
                    { "hex.builtin.view.information.highest_entropy", "Highest entropy block" },
                    { "hex.builtin.view.information.encrypted", "Esses dados provavelmente estão criptografados ou compactados!" },
                    { "hex.builtin.view.information.magic_db_added", "Magic database added!" },

                { "hex.builtin.view.patches.name", "Patches" },
                    { "hex.builtin.view.patches.offset", "Desvio" },
                    { "hex.builtin.view.patches.orig", "Valor Original" },
                    { "hex.builtin.view.patches.patch", "Valor Atualizado"},
                    { "hex.builtin.view.patches.remove", "Remover Atualização" },

                { "hex.builtin.view.pattern_editor.name", "Editor de padrões" },
                { "hex.builtin.view.pattern_editor.accept_pattern", "Aceitar padrão" },
                    { "hex.builtin.view.pattern_editor.accept_pattern.desc", "Um ou mais padrão_linguagem compatível com este tipo de dados foi encontrado" },
                    { "hex.builtin.view.pattern_editor.accept_pattern.pattern_language", "Padrões" },
                    { "hex.builtin.view.pattern_editor.accept_pattern.question", "Deseja aplicar o padrão selecionado?" },
                { "hex.builtin.view.pattern_editor.menu.file.load_pattern", "Carregando padrão..." },
                { "hex.builtin.view.pattern_editor.menu.file.save_pattern", "Salvando padrão..." },
                //{ "hex.builtin.view.pattern_editor.menu.edit.place_pattern", "Place pattern..." },
                //    { "hex.builtin.view.pattern_editor.menu.edit.place_pattern.builtin", "Built-in Type" },
                //        { "hex.builtin.view.pattern_editor.menu.edit.place_pattern.builtin.single", "Single" },
                //        { "hex.builtin.view.pattern_editor.menu.edit.place_pattern.builtin.array", "Array" },
                //    { "hex.builtin.view.pattern_editor.menu.edit.place_pattern.custom", "Custom Type" },
                { "hex.builtin.view.pattern_editor.open_pattern", "Abrir padrão" },
                { "hex.builtin.view.pattern_editor.evaluating", "Avaliando..." },
                { "hex.builtin.view.pattern_editor.auto", "Auto Avaliar" },
                { "hex.builtin.view.pattern_editor.console", "Console" },
                { "hex.builtin.view.pattern_editor.env_vars", "Variáveis de Ambiente" },
                { "hex.builtin.view.pattern_editor.settings", "Configurações" },
                { "hex.builtin.view.pattern_editor.dangerous_function.name", "Permitir função perigosa?" },
                { "hex.builtin.view.pattern_editor.dangerous_function.desc", "Este padrão tentou chamar uma função perigosa.\nTem certeza de que deseja confiar neste padrão?" },
                { "hex.builtin.view.pattern_editor.no_in_out_vars", "Defina algumas variáveis globais com o especificador 'in' ou 'out' para que elas apareçam aqui." },

                { "hex.builtin.view.pattern_data.name", "Padrão de Dados" },
                    { "hex.builtin.view.pattern_data.var_name", "Nome" },
                    { "hex.builtin.view.pattern_data.color", "Cor" },
                    { "hex.builtin.view.pattern_data.offset", "Offset" },
                    { "hex.builtin.view.pattern_data.size", "Tamanho" },
                    { "hex.builtin.view.pattern_data.type", "Tipo" },
                    { "hex.builtin.view.pattern_data.value", "Valor" },

                { "hex.builtin.view.settings.name", "Configurações" },
                    { "hex.builtin.view.settings.restart_question", "Uma alteração que você fez requer uma reinicialização do ImHex para entrar em vigor. Deseja reiniciar agora?" },

                { "hex.builtin.view.tools.name", "Ferramentas" },

                { "hex.builtin.view.yara.name", "Regras Yara" },
                    { "hex.builtin.view.yara.header.rules", "Regras" },
                        { "hex.builtin.view.yara.reload", "Recarregar" },
                        { "hex.builtin.view.yara.match", "Combinar Regras" },
                        { "hex.builtin.view.yara.matching", "Combinando..." },
                        { "hex.builtin.view.yara.error", "Erro do compilador Yara: " },
                    { "hex.builtin.view.yara.header.matches", "Combinações" },
                        { "hex.builtin.view.yara.matches.identifier", "Identificador" },
                        { "hex.builtin.view.yara.matches.variable", "Variável" },
                        { "hex.builtin.view.yara.whole_data", "O arquivo inteiro corresponde!" },
                        { "hex.builtin.view.yara.no_rules", "Nenhuma regra YARA encontrada. Coloque-os na pasta 'yara' do ImHex" },
                    { "hex.builtin.view.yara.rule_added", "Regra Yara Adicionada!" },


                { "hex.builtin.view.constants.name", "Constantes" },
                    { "hex.builtin.view.constants.row.category", "Categoria" },
                    { "hex.builtin.view.constants.row.name", "Nome" },
                    { "hex.builtin.view.constants.row.desc", "Descrição" },
                    { "hex.builtin.view.constants.row.value", "Valor" },

                { "hex.builtin.view.store.name", "Loja de Conteúdo" },
                    { "hex.builtin.view.store.desc", "Baixe novos conteúdos do banco de dados online da ImHex" },
                    { "hex.builtin.view.store.reload", "Recarregar" },
                    { "hex.builtin.view.store.row.name", "Nome" },
                    { "hex.builtin.view.store.row.description", "Descrição" },
                    { "hex.builtin.view.store.download", "Baixar" },
                    { "hex.builtin.view.store.update", "Atualizar" },
                    { "hex.builtin.view.store.remove", "Remover" },
                    { "hex.builtin.view.store.tab.patterns", "Padrões" },
                    { "hex.builtin.view.store.tab.libraries", "Bibliotecas" },
                    { "hex.builtin.view.store.tab.magics", "Arquivos Mágicos" },
                    { "hex.builtin.view.store.tab.constants", "Constantes" },
                    { "hex.builtin.view.store.tab.yara", "Regras Yara" },
                    { "hex.builtin.view.store.tab.encodings", "Codificações" },
                    { "hex.builtin.view.store.loading", "Carregando conteúdo da loja..." },
                    { "hex.builtin.view.store.download_error", "Falha ao baixar o arquivo! A pasta de destino não existe." },

                { "hex.builtin.view.diff.name", "Diferenciando" },

                { "hex.builtin.view.provider_settings.name", "Configurações do provedor" },
                    { "hex.builtin.view.provider_settings.load_popup", "Abrir Provedor" },
                    // { "hex.builtin.view.provider_settings.load_error", "An error occurred while trying to open this provider!"},

                //{ "hex.builtin.view.find.name", "Find" },
                //    { "hex.builtin.view.find.searching", "Searching..." },
                //    { "hex.builtin.view.find.demangled", "Demangled" },
                //    { "hex.builtin.view.find.strings", "Strings" },
                //        { "hex.builtin.view.find.strings.min_length", "Minimum length" },
                //        { "hex.builtin.view.find.strings.match_settings", "Match Settings" },
                //        { "hex.builtin.view.find.strings.null_term", "Require Null Termination" },
                //        { "hex.builtin.view.find.strings.chars", "Characters" },
                //        { "hex.builtin.view.find.strings.lower_case", "Lower case letters" },
                //        { "hex.builtin.view.find.strings.upper_case", "Upper case letters" },
                //        { "hex.builtin.view.find.strings.numbers", "Numbers" },
                //        { "hex.builtin.view.find.strings.underscores", "Underscores" },
                //        { "hex.builtin.view.find.strings.symbols", "Symbols" },
                //        { "hex.builtin.view.find.strings.spaces", "Spaces" },
                //        { "hex.builtin.view.find.strings.line_feeds", "Line Feeds" },
                //    { "hex.builtin.view.find.sequences", "Sequences" },
                //    { "hex.builtin.view.find.regex", "Regex" },
                        // { "hex.builtin.view.find.regex.pattern", "Pattern" },
                        // { "hex.builtin.view.find.regex.full_match", "Require full match" },
                //    { "hex.builtin.view.find.binary_pattern", "Binary Pattern" },
                //    { "hex.builtin.view.find.value", "Numeric Value" },
                //          { "hex.builtin.view.find.value.min", "Minimum Value" },
                //          { "hex.builtin.view.find.value.max", "Maximum Value" },
                //    { "hex.builtin.view.find.search", "Search" },
                //    { "hex.builtin.view.find.context.copy", "Copy Value" },
                //    { "hex.builtin.view.find.context.copy_demangle", "Copy Demangled Value" },
                //    { "hex.builtin.view.find.search.entries", "{} entries found" },
                //    { "hex.builtin.view.find.search.reset", "Reset" },

                { "hex.builtin.command.calc.desc", "Calculadora" },
                { "hex.builtin.command.cmd.desc", "Comando" },
                { "hex.builtin.command.cmd.result", "Iniciar Comando '{0}'" },
                { "hex.builtin.command.web.desc", "Website lookup" },
                { "hex.builtin.command.web.result", "Navegar para '{0}'" },

                { "hex.builtin.inspector.binary", "Binary (8 bit)" },
                { "hex.builtin.inspector.u8", "uint8_t" },
                { "hex.builtin.inspector.i8", "int8_t" },
                { "hex.builtin.inspector.u16", "uint16_t" },
                { "hex.builtin.inspector.i16", "int16_t" },
                { "hex.builtin.inspector.u24", "uint24_t" },
                { "hex.builtin.inspector.i24", "int24_t" },
                { "hex.builtin.inspector.u32", "uint32_t" },
                { "hex.builtin.inspector.i32", "int32_t" },
                { "hex.builtin.inspector.u48", "uint48_t" },
                { "hex.builtin.inspector.i48", "int48_t" },
                { "hex.builtin.inspector.u64", "uint64_t" },
                { "hex.builtin.inspector.i64", "int64_t" },
                { "hex.builtin.inspector.float16", "half float (16 bit)" },
                { "hex.builtin.inspector.float", "float (32 bit)" },
                { "hex.builtin.inspector.double", "double (64 bit)" },
                { "hex.builtin.inspector.long_double", "long double (128 bit)" },
                //{ "hex.builtin.inspector.sleb128", "Signed LEB128" },
                //{ "hex.builtin.inspector.uleb128", "Unsigned LEB128" },
                { "hex.builtin.inspector.bool", "bool" },
                { "hex.builtin.inspector.ascii", "ASCII Character" },
                { "hex.builtin.inspector.wide", "Wide Character" },
                { "hex.builtin.inspector.utf8", "UTF-8 code point" },
                { "hex.builtin.inspector.string", "String" },
                { "hex.builtin.inspector.string16", "Wide String" },
                { "hex.builtin.inspector.time32", "time32_t" },
                { "hex.builtin.inspector.time64", "time64_t" },
                { "hex.builtin.inspector.time", "time_t" },
                { "hex.builtin.inspector.dos_date", "DOS Date" },
                { "hex.builtin.inspector.dos_time", "DOS Time" },
                { "hex.builtin.inspector.guid", "GUID" },
                { "hex.builtin.inspector.rgba8", "RGBA8 Color" },
                { "hex.builtin.inspector.rgb565", "RGB565 Color" },

                { "hex.builtin.nodes.common.input", "Input" },
                { "hex.builtin.nodes.common.input.a", "Input A" },
                { "hex.builtin.nodes.common.input.b", "Input B" },
                { "hex.builtin.nodes.common.output", "Output" },
                //{ "hex.builtin.nodes.common.width", "Width" },
                //{ "hex.builtin.nodes.common.height", "Height" },

                { "hex.builtin.nodes.constants", "Constants" },
                    { "hex.builtin.nodes.constants.int", "Integer" },
                        { "hex.builtin.nodes.constants.int.header", "Integer" },
                    { "hex.builtin.nodes.constants.float", "Float" },
                        { "hex.builtin.nodes.constants.float.header", "Float" },
                    { "hex.builtin.nodes.constants.nullptr", "Nullptr" },
                        { "hex.builtin.nodes.constants.nullptr.header", "Nullptr" },
                    { "hex.builtin.nodes.constants.buffer", "Buffer" },
                        { "hex.builtin.nodes.constants.buffer.header", "Buffer" },
                        { "hex.builtin.nodes.constants.buffer.size", "Size" },
                    { "hex.builtin.nodes.constants.string", "String" },
                        { "hex.builtin.nodes.constants.string.header", "String" },
                    { "hex.builtin.nodes.constants.rgba8", "RGBA8 color" },
                        { "hex.builtin.nodes.constants.rgba8.header", "RGBA8 color" },
                        { "hex.builtin.nodes.constants.rgba8.output.r", "Red" },
                        { "hex.builtin.nodes.constants.rgba8.output.g", "Green" },
                        { "hex.builtin.nodes.constants.rgba8.output.b", "Blue" },
                        { "hex.builtin.nodes.constants.rgba8.output.a", "Alpha" },
                    { "hex.builtin.nodes.constants.comment", "Comment" },
                        { "hex.builtin.nodes.constants.comment.header", "Comment" },

                { "hex.builtin.nodes.display", "Display" },
                    { "hex.builtin.nodes.display.int", "Integer" },
                        { "hex.builtin.nodes.display.int.header", "Integer display" },
                    { "hex.builtin.nodes.display.float", "Float" },
                        { "hex.builtin.nodes.display.float.header", "Float display" },
                //    { "hex.builtin.nodes.display.buffer", "Buffer" },
                //        { "hex.builtin.nodes.display.buffer.header", "Buffer display" },
                //    { "hex.builtin.nodes.display.string", "String" },
                //        { "hex.builtin.nodes.display.string.header", "String display" },

                { "hex.builtin.nodes.data_access", "Acesso de dados" },
                    { "hex.builtin.nodes.data_access.read", "Ler" },
                        { "hex.builtin.nodes.data_access.read.header", "Ler" },
                        { "hex.builtin.nodes.data_access.read.address", "Caminho" },
                        { "hex.builtin.nodes.data_access.read.size", "Tamanho" },
                        { "hex.builtin.nodes.data_access.read.data", "Dados" },
                    { "hex.builtin.nodes.data_access.write", "Escrever" },
                        { "hex.builtin.nodes.data_access.write.header", "Escrever" },
                        { "hex.builtin.nodes.data_access.write.address", "Caminho" },
                        { "hex.builtin.nodes.data_access.write.data", "Dados" },
                    { "hex.builtin.nodes.data_access.size", "Tamanho dos Dados"},
                        { "hex.builtin.nodes.data_access.size.header", "Tamanho dos Dados"},
                        { "hex.builtin.nodes.data_access.size.size", "Tamanho"},
                    { "hex.builtin.nodes.data_access.selection", "Região Selecionada"},
                        { "hex.builtin.nodes.data_access.selection.header", "Região Selecionada"},
                        { "hex.builtin.nodes.data_access.selection.address", "Caminho"},
                        { "hex.builtin.nodes.data_access.selection.size", "Tamanho"},

                { "hex.builtin.nodes.casting", "Conversão de Dados" },
                    { "hex.builtin.nodes.casting.int_to_buffer", "Integer to Buffer" },
                        { "hex.builtin.nodes.casting.int_to_buffer.header", "Integer to Buffer" },
                    { "hex.builtin.nodes.casting.buffer_to_int", "Buffer to Integer" },
                        { "hex.builtin.nodes.casting.buffer_to_int.header", "Buffer to Integer" },
                    //{ "hex.builtin.nodes.casting.float_to_buffer", "Float to Buffer" },
                        //{ "hex.builtin.nodes.casting.float_to_buffer.header", "Float to Buffer" },
                    //{ "hex.builtin.nodes.casting.buffer_to_float", "Buffer to Float" },
                        //{ "hex.builtin.nodes.casting.buffer_to_float.header", "Buffer to Float" },

                { "hex.builtin.nodes.arithmetic", "Aritmética" },
                    { "hex.builtin.nodes.arithmetic.add", "Adição" },
                        { "hex.builtin.nodes.arithmetic.add.header", "Adicionar" },
                    { "hex.builtin.nodes.arithmetic.sub", "Subtração" },
                        { "hex.builtin.nodes.arithmetic.sub.header", "Subtrair" },
                    { "hex.builtin.nodes.arithmetic.mul", "Multiplição" },
                        { "hex.builtin.nodes.arithmetic.mul.header", "Multiplicar" },
                    { "hex.builtin.nodes.arithmetic.div", "Divisão" },
                        { "hex.builtin.nodes.arithmetic.div.header", "Dividir" },
                    { "hex.builtin.nodes.arithmetic.mod", "Módulos" },
                        { "hex.builtin.nodes.arithmetic.mod.header", "Módulo" },
                //    { "hex.builtin.nodes.arithmetic.average", "Average" },
                //        { "hex.builtin.nodes.arithmetic.average.header", "Average" },
                //    { "hex.builtin.nodes.arithmetic.median", "Median" },
                //        { "hex.builtin.nodes.arithmetic.median.header", "Median" },

                { "hex.builtin.nodes.buffer", "Buffer" },
                    { "hex.builtin.nodes.buffer.combine", "Combinar" },
                        { "hex.builtin.nodes.buffer.combine.header", "Combinar buffers" },
                    { "hex.builtin.nodes.buffer.slice", "Slice" },
                        { "hex.builtin.nodes.buffer.slice.header", "Slice buffer" },
                        { "hex.builtin.nodes.buffer.slice.input.buffer", "Entrada" },
                        { "hex.builtin.nodes.buffer.slice.input.from", "Do" },
                        { "hex.builtin.nodes.buffer.slice.input.to", "Para" },
                    { "hex.builtin.nodes.buffer.repeat", "Repetir" },
                        { "hex.builtin.nodes.buffer.repeat.header", "Repetir buffer" },
                        //{ "hex.builtin.nodes.buffer.repeat.input.buffer", "Input" },
                        { "hex.builtin.nodes.buffer.repeat.input.count", "Contar" },
                //    { "hex.builtin.nodes.buffer.patch", "Patch" },
                //        { "hex.builtin.nodes.buffer.patch.header", "Patch" },
                //        { "hex.builtin.nodes.buffer.patch.input.patch", "Patch" },

                { "hex.builtin.nodes.control_flow", "Control flow" },
                    { "hex.builtin.nodes.control_flow.if", "If" },
                        { "hex.builtin.nodes.control_flow.if.header", "If" },
                        { "hex.builtin.nodes.control_flow.if.condition", "Condition" },
                        { "hex.builtin.nodes.control_flow.if.true", "True" },
                        { "hex.builtin.nodes.control_flow.if.false", "False" },
                    { "hex.builtin.nodes.control_flow.equals", "Equals" },
                        { "hex.builtin.nodes.control_flow.equals.header", "Equals" },
                    { "hex.builtin.nodes.control_flow.not", "Not" },
                        { "hex.builtin.nodes.control_flow.not.header", "Not" },
                    { "hex.builtin.nodes.control_flow.gt", "Greater than" },
                        { "hex.builtin.nodes.control_flow.gt.header", "Greater than" },
                    { "hex.builtin.nodes.control_flow.lt", "Less than" },
                        { "hex.builtin.nodes.control_flow.lt.header", "Less than" },
                    { "hex.builtin.nodes.control_flow.and", "AND" },
                        { "hex.builtin.nodes.control_flow.and.header", "Boolean AND" },
                    { "hex.builtin.nodes.control_flow.or", "OR" },
                        { "hex.builtin.nodes.control_flow.or.header", "Boolean OR" },

                { "hex.builtin.nodes.bitwise", "Bitwise operations" },
                    { "hex.builtin.nodes.bitwise.and", "AND" },
                        { "hex.builtin.nodes.bitwise.and.header", "Bitwise AND" },
                    { "hex.builtin.nodes.bitwise.or", "OR" },
                        { "hex.builtin.nodes.bitwise.or.header", "Bitwise OR" },
                    { "hex.builtin.nodes.bitwise.xor", "XOR" },
                        { "hex.builtin.nodes.bitwise.xor.header", "Bitwise XOR" },
                    { "hex.builtin.nodes.bitwise.not", "NOT" },
                        { "hex.builtin.nodes.bitwise.not.header", "Bitwise NOT" },

                { "hex.builtin.nodes.decoding", "Decoding" },
                    { "hex.builtin.nodes.decoding.base64", "Base64" },
                        { "hex.builtin.nodes.decoding.base64.header", "Base64 decoder" },
                    { "hex.builtin.nodes.decoding.hex", "Hexadecimal" },
                        { "hex.builtin.nodes.decoding.hex.header", "Hexadecimal decoder" },

                { "hex.builtin.nodes.crypto", "Cryptography" },
                    { "hex.builtin.nodes.crypto.aes", "AES Decryptor" },
                        { "hex.builtin.nodes.crypto.aes.header", "AES Decryptor" },
                        { "hex.builtin.nodes.crypto.aes.key", "Key" },
                        { "hex.builtin.nodes.crypto.aes.iv", "IV" },
                        { "hex.builtin.nodes.crypto.aes.nonce", "Nonce" },
                        { "hex.builtin.nodes.crypto.aes.mode", "Mode" },
                        { "hex.builtin.nodes.crypto.aes.key_length", "Key length" },

                { "hex.builtin.nodes.visualizer", "Visualizers" },
                    { "hex.builtin.nodes.visualizer.digram", "Digram" },
                        { "hex.builtin.nodes.visualizer.digram.header", "Digram" },
                    { "hex.builtin.nodes.visualizer.layered_dist", "Layered Distribution" },
                        { "hex.builtin.nodes.visualizer.layered_dist.header", "Layered Distribution" },
                    { "hex.builtin.nodes.visualizer.image", "Image" },
                        { "hex.builtin.nodes.visualizer.image.header", "Image Visualizer" },
                    //{ "hex.builtin.nodes.visualizer.image_rgba", "RGBA8 Image" },
                        //{ "hex.builtin.nodes.visualizer.image_rgba.header", "RGBA8 Image Visualizer" },
                    { "hex.builtin.nodes.visualizer.byte_distribution", "Byte Distribution" },
                        { "hex.builtin.nodes.visualizer.byte_distribution.header", "Byte Distribution" },

                //{ "hex.builtin.nodes.pattern_language", "Pattern Language" },
                    //{ "hex.builtin.nodes.pattern_language.out_var", "Out Variable" },
                        //{ "hex.builtin.nodes.pattern_language.out_var.header", "Out Variable" },


                { "hex.builtin.tools.demangler", "LLVM Demangler" },
                    { "hex.builtin.tools.demangler.mangled", "Mangled name" },
                    { "hex.builtin.tools.demangler.demangled", "Demangled name" },
                { "hex.builtin.tools.ascii_table", "ASCII table" },
                    { "hex.builtin.tools.ascii_table.octal", "Mostrar octal" },
                { "hex.builtin.tools.regex_replacer", "Regex replacer" },
                    { "hex.builtin.tools.regex_replacer.pattern", "Regex pattern" },
                    { "hex.builtin.tools.regex_replacer.replace", "Replace pattern" },
                    { "hex.builtin.tools.regex_replacer.input", "Entrada" },
                    { "hex.builtin.tools.regex_replacer.output", "Saida" },
                { "hex.builtin.tools.color", "Color picker" },
                { "hex.builtin.tools.calc", "Calculadora" },
                    { "hex.builtin.tools.input", "Input" },
                    { "hex.builtin.tools.format.standard", "Standard" },
                    { "hex.builtin.tools.format.scientific", "Scientific" },
                    { "hex.builtin.tools.format.engineering", "Engineering" },
                    { "hex.builtin.tools.format.programmer", "Programmer" },
                    { "hex.builtin.tools.error", "Last error: '{0}'" },
                    { "hex.builtin.tools.history", "History" },
                    { "hex.builtin.tools.name", "Nome" },
                    { "hex.builtin.tools.value", "Valor" },
                { "hex.builtin.tools.base_converter", "Base converter" },
                    { "hex.builtin.tools.base_converter.dec", "DEC" },
                    { "hex.builtin.tools.base_converter.hex", "HEX" },
                    { "hex.builtin.tools.base_converter.oct", "OCT" },
                    { "hex.builtin.tools.base_converter.bin", "BIN" },
                { "hex.builtin.tools.permissions", "Calculadora de Permissões UNIX" },
                    { "hex.builtin.tools.permissions.perm_bits", "Permission bits" },
                    { "hex.builtin.tools.permissions.absolute", "Absolute Notation" },
                    { "hex.builtin.tools.permissions.setuid_error", "O usuário deve ter direitos de execução para que o bit setuid seja aplicado!" },
                    { "hex.builtin.tools.permissions.setgid_error", "O grupo deve ter direitos de execução para que o bit setgid seja aplicado!" },
                    { "hex.builtin.tools.permissions.sticky_error", "Outros devem ter direitos de execução para que o sticky bit seja aplicado!" },
                { "hex.builtin.tools.file_uploader", "Carregador de Arquivo" },
                    { "hex.builtin.tools.file_uploader.control", "Controle" },
                    { "hex.builtin.tools.file_uploader.upload", "Enviar" },
                    { "hex.builtin.tools.file_uploader.done", "Feito!" },
                    { "hex.builtin.tools.file_uploader.recent", "Recent Uploads" },
                    { "hex.builtin.tools.file_uploader.tooltip", "Clique para copiar\nCTRL + Click para abrir" },
                    { "hex.builtin.tools.file_uploader.invalid_response", "Invalid response from Anonfiles!" },
                    { "hex.builtin.tools.file_uploader.error", "Failed to upload file!\n\nError Code: {0}" },
                { "hex.builtin.tools.wiki_explain", "Definições de termos da Wikipédia" },
                    { "hex.builtin.tools.wiki_explain.control", "Control" },
                    { "hex.builtin.tools.wiki_explain.search", "Procurar" },
                    { "hex.builtin.tools.wiki_explain.results", "Resultados" },
                    { "hex.builtin.tools.wiki_explain.invalid_response", "Resposta inválida da Wikipedia!" },
                { "hex.builtin.tools.file_tools", "Ferramentas de Arquivo" },
                    { "hex.builtin.tools.file_tools.shredder", "Triturador" },
                        { "hex.builtin.tools.file_tools.shredder.warning", "Esta ferramenta destrói IRRECUPERAVELMENTE um arquivo. Use com cuidado" },
                        { "hex.builtin.tools.file_tools.shredder.input", "Arquivo para triturar " },
                        { "hex.builtin.tools.file_tools.shredder.picker", "Abrir arquivo para triturar" },
                        { "hex.builtin.tools.file_tools.shredder.fast", "Modo Rápido" },
                        { "hex.builtin.tools.file_tools.shredder.shredding", "Triturando..." },
                        { "hex.builtin.tools.file_tools.shredder.shred", "Triturado" },
                        { "hex.builtin.tools.file_tools.shredder.error.open", "Falha ao abrir o arquivo selecionado!" },
                        { "hex.builtin.tools.file_tools.shredder.success", "Triturado com sucesso!" },
                    { "hex.builtin.tools.file_tools.splitter", "Divisor" },
                        { "hex.builtin.tools.file_tools.splitter.sizes.5_75_floppy", "5¼\" Floppy disk (1200KiB)" },
                        { "hex.builtin.tools.file_tools.splitter.sizes.3_5_floppy", "3½\" Floppy disk (1400KiB)" },
                        { "hex.builtin.tools.file_tools.splitter.sizes.zip100", "Zip 100 Disk (100MiB)" },
                        { "hex.builtin.tools.file_tools.splitter.sizes.zip200", "Zip 200 Disk (200MiB)" },
                        { "hex.builtin.tools.file_tools.splitter.sizes.cdrom650", "CD-ROM (650MiB)" },
                        { "hex.builtin.tools.file_tools.splitter.sizes.cdrom700", "CD-ROM (700MiB)" },
                        { "hex.builtin.tools.file_tools.splitter.sizes.fat32", "FAT32 (4GiB)" },
                        { "hex.builtin.tools.file_tools.splitter.sizes.custom", "Customizado" },
                        { "hex.builtin.tools.file_tools.splitter.input", "Arquivo para dividir " },
                        { "hex.builtin.tools.file_tools.splitter.picker.input", "Abrir arquivo para dividir" },
                        { "hex.builtin.tools.file_tools.splitter.output", "Caminho de Saída " },
                        { "hex.builtin.tools.file_tools.splitter.picker.output", "Definir caminho base" },
                        { "hex.builtin.tools.file_tools.splitter.picker.splitting", "Dividindo..." },
                        { "hex.builtin.tools.file_tools.splitter.picker.split", "Dividir" },
                        { "hex.builtin.tools.file_tools.splitter.picker.error.open", "Falha ao abrir o arquivo selecionado!" },
                        { "hex.builtin.tools.file_tools.splitter.picker.error.size", "O arquivo é menor que o tamanho da peça" },
                        { "hex.builtin.tools.file_tools.splitter.picker.error.create", "Falha ao criar arquivo de peça {0}" },
                        { "hex.builtin.tools.file_tools.splitter.picker.success", "Arquivo dividido com sucesso!" },
                    { "hex.builtin.tools.file_tools.combiner", "Combinador" },
                        { "hex.builtin.tools.file_tools.combiner.add", "Adicionar..." },
                        { "hex.builtin.tools.file_tools.combiner.add.picker", "Adicionar Arquivo" },
                        { "hex.builtin.tools.file_tools.combiner.delete", "Apagar" },
                        { "hex.builtin.tools.file_tools.combiner.clear", "Limpar" },
                        { "hex.builtin.tools.file_tools.combiner.output", "Arquivo de saída" },
                        { "hex.builtin.tools.file_tools.combiner.output.picker", "Definir caminho base de saída" },
                        { "hex.builtin.tools.file_tools.combiner.combining", "Combinando..." },
                        { "hex.builtin.tools.file_tools.combiner.combine", "Combinar" },
                        { "hex.builtin.tools.file_tools.combiner.error.open_output", "Falha ao criar um Arquivo de saída" },
                        { "hex.builtin.tools.file_tools.combiner.open_input", "Falha ao abrir o Arquivo de saída {0}" },
                        { "hex.builtin.tools.file_tools.combiner.success", "Arquivos combinados com sucesso!" },
                { "hex.builtin.tools.ieee756", "IEEE 756 Floating Point Tester" },
                    { "hex.builtin.tools.ieee756.sign", "Sign" },
                    { "hex.builtin.tools.ieee756.exponent", "Exponent" },
                    { "hex.builtin.tools.ieee756.mantissa", "Mantissa" },
                    { "hex.builtin.tools.ieee756.exponent_size", "Exponent Size" },
                    { "hex.builtin.tools.ieee756.mantissa_size", "Mantissa Size" },
                    { "hex.builtin.tools.ieee756.half_precision", "Half Precision" },
                    { "hex.builtin.tools.ieee756.singe_precision", "Single Precision" },
                    { "hex.builtin.tools.ieee756.double_precision", "Double Precision" },
                    { "hex.builtin.tools.ieee756.type", "Tipo" },
                    { "hex.builtin.tools.ieee756.formula", "Formula" },
                    { "hex.builtin.tools.ieee756.result.title", "Resultado" },
                    { "hex.builtin.tools.ieee756.result.float", "Resultado de ponto flutuante" },
                    { "hex.builtin.tools.ieee756.result.hex", "Resultado Hexadecimal" },

                { "hex.builtin.setting.imhex", "ImHex" },
                    { "hex.builtin.setting.imhex.recent_files", "Arquivos Recentes" },
                { "hex.builtin.setting.general", "General" },
                    { "hex.builtin.setting.general.show_tips", "Mostrar dicas na inicialização" },
                    { "hex.builtin.setting.general.auto_load_patterns", "Padrão compatível com carregamento automático" },
                    // { "hex.builtin.setting.general.sync_pattern_source", "Sync pattern source code between providers" },
                { "hex.builtin.setting.interface", "Interface" },
                    { "hex.builtin.setting.interface.color", "Color theme" },
                        { "hex.builtin.setting.interface.color.system", "Sistema" },
                        { "hex.builtin.setting.interface.color.dark", "Escuro" },
                        { "hex.builtin.setting.interface.color.light", "Claro" },
                        { "hex.builtin.setting.interface.color.classic", "Classico" },
                    { "hex.builtin.setting.interface.scaling", "Scaling" },
                        { "hex.builtin.setting.interface.scaling.native", "Nativo" },
                        { "hex.builtin.setting.interface.scaling.x0_5", "x0.5" },
                        { "hex.builtin.setting.interface.scaling.x1_0", "x1.0" },
                        { "hex.builtin.setting.interface.scaling.x1_5", "x1.5" },
                        { "hex.builtin.setting.interface.scaling.x2_0", "x2.0" },
                        { "hex.builtin.setting.interface.scaling.x3_0", "x3.0" },
                        { "hex.builtin.setting.interface.scaling.x4_0", "x4.0" },
                    { "hex.builtin.setting.interface.language", "Idioma" },
                    { "hex.builtin.setting.interface.wiki_explain_language", "Idioma do Wikipedia" },
                    { "hex.builtin.setting.interface.fps", "FPS Limit" },
                    { "hex.builtin.setting.interface.fps.unlocked", "Destravado" },
                    //{ "hex.builtin.setting.interface.multi_windows", "Enable Multi Window support" },
                { "hex.builtin.setting.hex_editor", "Hex Editor" },
                    //{ "hex.builtin.setting.hex_editor.highlight_color", "Selection highlight color" },
                    { "hex.builtin.setting.hex_editor.bytes_per_row", "Bytes por linha" },
                    { "hex.builtin.setting.hex_editor.ascii", "Exibir coluna ASCII" },
                    //{ "hex.builtin.setting.hex_editor.advanced_decoding", "Display advanced decoding column" },
                    //{ "hex.builtin.setting.hex_editor.grey_zeros", "Grey out zeros" },
                    //{ "hex.builtin.setting.hex_editor.uppercase_hex", "Upper case Hex characters" },
                    { "hex.builtin.setting.hex_editor.visualizer", "Visualizador de Dados" },
                    //{ "hex.builtin.setting.hex_editor.sync_scrolling", "Synchronize editor position" },
                    //{ "hex.builtin.setting.hex_editor.byte_padding", "Extra byte cell padding" },
                    //{ "hex.builtin.setting.hex_editor.char_padding", "Extra character cell padding" },
                { "hex.builtin.setting.folders", "Pastas" },
                    { "hex.builtin.setting.folders.description", "Especifique caminhos de pesquisa adicionais para padrões, scripts, regras Yara e muito mais" },
                    { "hex.builtin.setting.folders.add_folder", "Adicionar nova pasta" },
                    { "hex.builtin.setting.folders.remove_folder", "Remover a pasta atualmente selecionada da lista" },
                { "hex.builtin.setting.font", "Fonte" },
                    { "hex.builtin.setting.font.font_path", "Caminho da Fonte Customizada" },
                    { "hex.builtin.setting.font.font_size", "Tamanho da Fonte" },
                //{ "hex.builtin.setting.proxy", "Proxy" },
                    //{ "hex.builtin.setting.proxy.description", "Proxy will take effect on store, wikipedia or any other plugin immediately." },
                    //{ "hex.builtin.setting.proxy.enable", "Enable Proxy" },
                    //{ "hex.builtin.setting.proxy.url", "Proxy URL" },
                    //{ "hex.builtin.setting.proxy.url.tooltip", "http(s):// or socks5:// (e.g., http://127.0.0.1:1080)" },

                { "hex.builtin.provider.file", "Provedor de arquivo" },
                    { "hex.builtin.provider.file.path", "Caminho do Arquivo" },
                    { "hex.builtin.provider.file.size", "Tamanho" },
                    { "hex.builtin.provider.file.creation", "Data de Criação" },
                    { "hex.builtin.provider.file.access", "Ultima vez acessado" },
                    { "hex.builtin.provider.file.modification", "Ultima vez modificado" },
                { "hex.builtin.provider.gdb", "GDB Server Provider" },
                    { "hex.builtin.provider.gdb.name", "GDB Server <{0}:{1}>" },
                    { "hex.builtin.provider.gdb.server", "Servidor" },
                    { "hex.builtin.provider.gdb.ip", "Endereço de IP" },
                    { "hex.builtin.provider.gdb.port", "Porta" },
                { "hex.builtin.provider.disk", "Provedor de disco bruto" },
                    { "hex.builtin.provider.disk.selected_disk", "Disco" },
                    { "hex.builtin.provider.disk.disk_size", "Tamanho do Disco" },
                    { "hex.builtin.provider.disk.sector_size", "Tamanho do Setor" },
                    { "hex.builtin.provider.disk.reload", "Recarregar" },
                //{ "hex.builtin.provider.intel_hex", "Intel Hex Provider" },
                //    { "hex.builtin.provider.intel_hex.name", "Intel Hex {0}" },
                //{ "hex.builtin.provider.motorola_srec", "Motorola SREC Provider" },
                //    { "hex.builtin.provider.motorola_srec.name", "Motorola SREC {0}" },
                //{ "hex.builtin.provider.mem_file", "Memory File" },
                //    { "hex.builtin.provider.mem_file.unsaved", "Unsaved File" },

                { "hex.builtin.layouts.default", "Default" },

                { "hex.builtin.visualizer.hexadecimal.8bit", "Hexadecimal (8 bits)" },
                { "hex.builtin.visualizer.hexadecimal.16bit", "Hexadecimal (16 bits)" },
                { "hex.builtin.visualizer.hexadecimal.32bit", "Hexadecimal (32 bits)" },
                { "hex.builtin.visualizer.hexadecimal.64bit", "Hexadecimal (64 bits)" },
                { "hex.builtin.visualizer.decimal.signed.8bit", "Decimal Signed (8 bits)" },
                { "hex.builtin.visualizer.decimal.signed.16bit", "Decimal Signed (16 bits)" },
                { "hex.builtin.visualizer.decimal.signed.32bit", "Decimal Signed (32 bits)" },
                { "hex.builtin.visualizer.decimal.signed.64bit", "Decimal Signed (64 bits)" },
                { "hex.builtin.visualizer.decimal.unsigned.8bit", "Decimal Unsigned (8 bits)" },
                { "hex.builtin.visualizer.decimal.unsigned.16bit", "Decimal Unsigned (16 bits)" },
                { "hex.builtin.visualizer.decimal.unsigned.32bit", "Decimal Unsigned (32 bits)" },
                { "hex.builtin.visualizer.decimal.unsigned.64bit", "Decimal Unsigned (64 bits)" },
                { "hex.builtin.visualizer.floating_point.16bit", "Floating Point (16 bits)" },
                { "hex.builtin.visualizer.floating_point.32bit", "Floating Point (32 bits)" },
                { "hex.builtin.visualizer.floating_point.64bit", "Floating Point (64 bits)" },
                { "hex.builtin.visualizer.hexii", "HexII" },
                { "hex.builtin.visualizer.rgba8", "RGBA8 Color" },

                { "hex.builtin.hash.md5", "MD5" },
                { "hex.builtin.hash.sha1", "SHA1" },
                { "hex.builtin.hash.sha224", "SHA224" },
                { "hex.builtin.hash.sha256", "SHA256" },
                { "hex.builtin.hash.sha384", "SHA384" },
                { "hex.builtin.hash.sha512", "SHA512" },
                { "hex.builtin.hash.crc8", "CRC8" },
                { "hex.builtin.hash.crc16", "CRC16" },
                { "hex.builtin.hash.crc32", "CRC32" },
                    { "hex.builtin.hash.crc.poly", "Polynomial" },
                    { "hex.builtin.hash.crc.iv", "Initial Value" },
                    { "hex.builtin.hash.crc.xor_out", "XOR Out" },
                    { "hex.builtin.hash.crc.refl_in", "Reflect In" },
                    { "hex.builtin.hash.crc.refl_out", "Reflect Out" },
        });
    }

}
